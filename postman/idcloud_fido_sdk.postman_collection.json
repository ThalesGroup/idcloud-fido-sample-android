{
	"info": {
		"_postman_id": "0f87cf04-2f87-4a8c-9f0e-b9714058ed3d",
		"name": "IdCloud FIDO Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8910146",
		"_collection_link": "https://gold-spaceship-8211.postman.co/workspace/Genuflecto-Workspace~45ab0b14-31bd-49e5-8864-2c7eb1e59652/collection/8910146-0f87cf04-2f87-4a8c-9f0e-b9714058ed3d?action=share&source=collection_link&creator=8910146"
	},
	"item": [
		{
			"name": "SCS",
			"item": [
				{
					"name": "Enrollment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let enrollmentToken = response.state.result.object.enrollmentToken;",
									"pm.environment.set(\"enrollmentToken\", enrollmentToken);",
									"",
									"let clientId = response.state.result.object.clientId;",
									"pm.environment.set(\"clientId\", clientId);",
									"",
									"let scenarioId = response.id;",
									"pm.environment.set(\"scenarioId\", scenarioId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function randomString(length=1) {",
									"    let randomString = \"\";",
									"    for (let i = 0; i < length; i++){",
									"        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");",
									"    }",
									"    return randomString;",
									"}",
									"",
									"STRING_LEN = 16;",
									"const randomName = \"\";",
									"pm.environment.set(\"randomName\", randomString(STRING_LEN));",
									"console.log(randomName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"username\": \"{{randomName}}\"\n    },\n    \"name\": \"Enroll_FIDO2\"\n}"
						},
						"url": {
							"raw": "https://{{scsUrl}}/scs/v1/scenarios",
							"protocol": "https",
							"host": [
								"{{scsUrl}}"
							],
							"path": [
								"scs",
								"v1",
								"scenarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "QR Code Generation",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.qrserver.com/v1/create-qr-code/?size=150x150&data={{enrollmentToken}}",
							"protocol": "https",
							"host": [
								"api",
								"qrserver",
								"com"
							],
							"path": [
								"v1",
								"create-qr-code",
								""
							],
							"query": [
								{
									"key": "size",
									"value": "150x150"
								},
								{
									"key": "data",
									"value": "{{enrollmentToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let scenarioId = response.id;",
									"pm.environment.set(\"scenarioId\", scenarioId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"username\": \"{{randomName}}\",\n        \"pushNotificationMessage\": {\n            \"title\": \"Authentication Request\",\n            \"body\": \"An authentication request was made.\"\n        }\n    },\n    \"name\": \"Auth_FIDO2\"\n}"
						},
						"url": {
							"raw": "https://{{scsUrl}}/scs/v1/scenarios",
							"protocol": "https",
							"host": [
								"{{scsUrl}}"
							],
							"path": [
								"scs",
								"v1",
								"scenarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let scenarioId = response.id;",
									"pm.environment.set(\"scenarioId\", scenarioId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"username\": \"{{randomName}}\",\n        \"transactionData\": [\n            {\n                \"name\": \"soybeans\"\n            },\n            {\n                \"px\": \"10.32\"\n            },\n            {\n                \"qty\": \"230\"\n            }\n        ]\n    },\n    \"name\": \"Sign_FIDO2\"\n}"
						},
						"url": {
							"raw": "https://{{scsUrl}}/scs/v1/scenarios",
							"protocol": "https",
							"host": [
								"{{scsUrl}}"
							],
							"path": [
								"scs",
								"v1",
								"scenarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample App Sign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"let scenarioId = response.id;",
									"pm.environment.set(\"scenarioId\", scenarioId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var timestamp = new Date();\r",
									"var moment = require(\"moment\")\r",
									"var timestampString = moment(timestamp).valueOf();\r",
									"pm.environment.set(\"currentTimestamp\", timestampString);\r",
									"console.log(timestampString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"userId\": \"{{randomName}}\",\n        \"transactionData\": [\n            {\n                \"date\": \"{{currentTimestamp}}\"\n            },\n            {\n                \"operation\": \"transfer\"\n            },\n            {\n                \"amount\": \"{{$randomInt}}.25\"\n            },\n            {\n                \"currency\": \"{{$randomCurrencyCode}}\"\n            },\n            {\n                \"from\": \"{{$randomFirstName}}\"\n            },\n            {\n                \"to\": \"{{$randomFirstName}}\"\n            }\n        ]\n    },\n    \"name\": \"Sign_FIDO2\"\n}"
						},
						"url": {
							"raw": "https://{{scsUrl}}/scs/v1/scenarios",
							"protocol": "https",
							"host": [
								"{{scsUrl}}"
							],
							"path": [
								"scs",
								"v1",
								"scenarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{scsUrl}}/scs/v1/scenarios/{{scenarioId}}",
							"protocol": "https",
							"host": [
								"{{scsUrl}}"
							],
							"path": [
								"scs",
								"v1",
								"scenarios",
								"{{scenarioId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{scsBearerToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}
